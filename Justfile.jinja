set shell := ["bash", "-c"]
set dotenv-load := true

mod web

# Default action is to list all available tasks
@default:
    @just --list

setup:
    #!/usr/bin/env bash

    if [[ "$OSTYPE" == "darwin"* ]]; then
        just mac-setup
    fi

    devbox install
    devbox run mise trust
    devbox run mise install
    rustup component add rustfmt
    rustup component add clippy
    rustup target add wasm32-unknown-unknown
    cargo binstall cargo-nextest --secure --no-confirm
    pre-commit install
    pre-commit install-hooks
    corepack install --global pnpm@latest

mac-setup:
    brew install libiconv llvm
    cargo install cargo-llvm-cov
    rustup component add llvm-tools-preview
    xcode-select --install
    sudo xcode-select --switch /Library/Developer/CommandLineTools

update-deps:
    cargo update

# Development tasks
watch:
    cargo watch -x check -x test

# Rust tasks
rust-check:
    cargo check --all-targets

rust-test:
    cargo nextest run --all-targets --no-fail-fast
    cargo test --doc --no-fail-fast

rust-doc:
    cargo doc --no-deps --document-private-items

rust-audit:
    cargo audit || exit 1
    cargo deny check || exit 1

rust-build:
    cargo build

rust-fmt:
    cargo fmt --all

rust-clippy:
    cargo clippy --all-targets -- -D warnings

rust-clean:
    cargo clean

copyright:
    fd -e rs -e ts -e js -e jsx -e tsx | xargs addlicense -f copyright.tmpl -c "{{ author_name }}" -v -s

copyright-check:
    fd -e rs -e ts -e js -e jsx -e tsx | xargs addlicense -f copyright.tmpl -c "{{ author_name }}" -v -s -check

# Combined tasks
check: rust-check rust-fmt rust-clippy rust-audit copyright-check
    @just web lint

test: rust-test
    @just web test

cov:
    cargo llvm-cov

build: rust-build
    @just web build

clean: rust-clean
    @just web clean

web-dev: build
    @just web dev

# CI tasks
ci: build check test cov
