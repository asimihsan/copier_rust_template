name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-template:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - {wasm: true,  python: true,  go: false, cache_suffix: full}     # Existing full
          - {wasm: true,  python: false, go: false, cache_suffix: no-py}    # Existing WASM
          - {wasm: false, python: true,  go: false, cache_suffix: no-wasm}  # Existing Python
          - {wasm: false, python: false, go: false, cache_suffix: minimal}  # Existing minimal
          - {wasm: false, python: false, go: true,  cache_suffix: go-only}  # New: Go only
    name: Test (${{ matrix.cache_suffix }})
    steps:
      - uses: actions/checkout@v4

      - name: Cache Rust
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            target
          key: rust-${{ matrix.cache_suffix }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-${{ matrix.cache_suffix }}-

      - name: Cache Python (uv)
        if: matrix.python
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            python/.venv
          key: python-${{ matrix.cache_suffix }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            python-${{ matrix.cache_suffix }}-

      - name: Cache Node Modules
        if: matrix.wasm
        uses: actions/cache@v4
        with:
          path: |
            ../test-project/web/node_modules
            ~/.npm
          key: node-${{ matrix.cache_suffix }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-${{ matrix.cache_suffix }}-

      - name: Cache Go
        if: matrix.go
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-${{ matrix.cache_suffix }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-${{ matrix.cache_suffix }}-

      - name: Cache mise
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/mise
            ~/.local/share/mise
          key: mise-${{ runner.os }}-${{ matrix.cache_suffix }}-${{ hashFiles('mise.toml', 'template/mise.toml.jinja', 'devbox.json', 'devbox.lock') }}
          restore-keys: |
            mise-${{ runner.os }}-${{ matrix.cache_suffix }}-
            mise-${{ runner.os }}-

      - name: Setup mise directories
        run: |
          mkdir -p ~/.local/state/mise
          sudo chown -R $USER:$USER ~/.local/state/mise

      - name: Setup Devbox
        uses: jetify-com/devbox-install-action@v0.11.0
        with:
          enable-cache: true

      - name: Generate Test Project
        run: |
          devbox run copier copy . ../test-project --vcs-ref HEAD \
            --data project_name="Test Project" \
            --data project_slug=test-project \
            --data project_slug_underscore=test_project \
            --data author_name="CI Bot" \
            --data include_wasm=${{ matrix.wasm }} \
            --data include_python=${{ matrix.python }} \
            --data include_go=${{ matrix.go }} \
            --defaults --overwrite

      - name: Test Generated Project
        working-directory: ../test-project
        run: |
          git init
          devbox install
          devbox run just setup copyright ci
